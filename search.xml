<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[牛顿迭代法求平方根]]></title>
    <url>%2F2018%2F03%2F19%2Fpython%E7%89%9B%E9%A1%BF%E8%BF%AD%E4%BB%A3%E6%B3%95%E6%B1%82%E5%B9%B3%E6%96%B9%E6%A0%B9%2F</url>
    <content type="text"><![CDATA[牛顿迭代法从函数意义上理解：我们是要求函数f(x) = x²，使f(x) = num的近似解，即x² - num = 0的近似解。 从几何意义上理解：我们是要求抛物线g(x) = x² - num与x轴交点（g(x) = 0）最接近的点。 我们假设g(x0)=0，即x0是正解，那么我们要做的就是让近似解x不断逼近x0。 先任取一个初始值xi，经过这个点（xi,f(xi)）的切线方程为 f(x) = f(xi) + f′(xi)(x−xi)，令切线方程等于0 (纵轴截距取0)，即可求出：x~i+1~ = x~i~−f(x~i~) / f′(x~i~) 可以由此得到 从几何图形上看，因为导数是切线，通过不断迭代，导数与x轴的交点会不断逼近x0。 123456789def mySqrt(self, x): """ :type x: int :rtype: int """ r = x while r*r &gt; x: r = (r + x/r) / 2 return r]]></content>
      <categories>
        <category>算法</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>算法</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[python数据结构-链表]]></title>
    <url>%2F2018%2F03%2F18%2Fpython%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-%E9%93%BE%E8%A1%A8%2F</url>
    <content type="text"><![CDATA[python实现链表依赖于类生成的实例，每个节点都是一个对象，组合在一起形成一个完整链表 对于node类只需关注两点：value 和 next对于linked_list需要关心的：head（头结点，默认是node），length（列表的长度） 链表的数据结构如下图所示： 链表的实现定义链表定义节点类Node123456789101112class Node: def __init__(self, value): ''' value: 节点保存的数据，next: 保存下一个节点对象 ''' self.val = value self.next = None def __repr__(self): ''' 用来定义Node的字符输出，print为输出value ''' return str(self.value) 操作链表定义链表类LinkedList链表要包括：属性：链表头：head链表长度：length 方法： is_empty() 链表是否为空 add(item) 链表头部添加元素 append(item) 链表尾部添加元素 insert(index, item) 指定位置添加元素 delete(index) 删除指定位置节点 remove(item) 删除某个数值节点 search(item) 查找节点是否存在 判断是否为空: is_Empty()12def is_empty(self): return self.length == 0 头部添加一个节点：add()123456def add(self, item): node = Node(item) # 将新节点的链接域next指向头节点，即head指向的位置 node.next = self.head # 将链表的头head指向新节点 self.head = node 尾部添加一个节点：append()12345678910111213def append(self, item): # 确保item是node对象 item = Node(item) # 先判断链表是否为空，若是空链表，则将head指向新节点 if self.is_empty(): self.head = node # 若不为空，则找到尾部，将尾节点的next指向新节点 else: node = self.head while node.next: node = node.next node.next = item self.length += 1 指定位置添加节点：insert()12345678910111213141516171819202122def insert(self, index, item): # 若指定位置pos为第一个元素之前，则执行头部插入 if index &lt;= 0: self.add(item) # 若指定位置超过链表尾部，则执行尾部插入 elif index &gt; (self.length()-1): self.append(item) # 找到指定位置 else: node = Node(item) # 从头节点开始移动到插入位置的前一个节点 pre = self.head while index-1: pre = pre.next index -= 1 # 先将新节点node的next指向插入位置的节点 node.next = pre.next # 将插入位置的前一个节点的next指向新节点 pre.next = node self.length += 1 删除数值是item的节点：remove(item)12345678910111213141516171819def remove(self, item): pre = None # 前一个节点 cur = self.head # 当前节点 while cur: # 找到了指定元素 if cur.item == item: # 如果第一个就是删除的节点 if not pre: # 将头指针指向头节点的后一个节点 self.head = cur.next else: # 将删除位置前一个节点的next指向删除位置的后一个节点 pre.next = cur.next self.length -= 1 break else: # 继续按链表后移节点 pre = cur cur = cur.next 删除某个位置的节点：delete(index)123456789101112131415def delete(self, index): if index &gt; self.length: # 索引值超出范围直接提示并且退出 print("Index is out of range.") return else: if index == 0: self.head = self.head.next else: pre = self.head while index - 1: pre = pre.next index -= 1 pre.next = pre.next.pnext self.length -= 1 查找节点是否存在：search()12345678def search(self,item): """链表查找节点是否存在，并返回True或者False""" cur = self.head while cur != None: if cur.item == item: return True cur = cur.next return False]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>数据结构</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[hexo博客-优化篇]]></title>
    <url>%2F2018%2F03%2F15%2Fhexo%E5%8D%9A%E5%AE%A2-%E4%BC%98%E5%8C%96%E7%AF%87%2F</url>
    <content type="text"><![CDATA[在文章中插入图片在source目录下新建一个img文件夹，将图片放入该文件夹下 插入图片时将链接写为/img/图片名称 设置鼠标经过头像时头像旋转打开\themes\next\source\css\_common\components\sidebar\sidebar-author.styl，在里面添加如下代码即可： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960.site-author-image &#123; display: block; margin: 0 auto; padding: $site-author-image-padding; max-width: $site-author-image-width; height: $site-author-image-height; border: $site-author-image-border-width solid $site-author-image-border-color; /* 头像圆形 */ border-radius: 80px; -webkit-border-radius: 80px; -moz-border-radius: 80px; box-shadow: inset 0 -1px 0 #333sf; /* 设置循环动画 [animation: (play)动画名称 (2s)动画播放时长单位秒或微秒 (ase-out)动画播放的速度曲线为以低速结束 (1s)等待1秒然后开始动画 (1)动画播放次数(infinite为循环播放) ]*/ /* 鼠标经过头像旋转360度 */ -webkit-transition: -webkit-transform 1.0s ease-out; -moz-transition: -moz-transform 1.0s ease-out; transition: transform 1.0s ease-out;&#125;img:hover &#123; /* 鼠标经过停止头像旋转 -webkit-animation-play-state:paused; animation-play-state:paused;*/ /* 鼠标经过头像旋转360度 */ -webkit-transform: rotateZ(360deg); -moz-transform: rotateZ(360deg); transform: rotateZ(360deg);&#125;/* Z 轴旋转动画 */@-webkit-keyframes play &#123; 0% &#123; -webkit-transform: rotateZ(0deg); &#125; 100% &#123; -webkit-transform: rotateZ(-360deg); &#125;&#125;@-moz-keyframes play &#123; 0% &#123; -moz-transform: rotateZ(0deg); &#125; 100% &#123; -moz-transform: rotateZ(-360deg); &#125;&#125;@keyframes play &#123; 0% &#123; transform: rotateZ(0deg); &#125; 100% &#123; transform: rotateZ(-360deg); &#125;&#125; 设置侧边栏的社交图标打开主题配置文件themes\next\_config.yml，搜索social_icons,在图标库找自己喜欢的小图标，并将名字复制在如下位置，保存即可 注意：第一次操作时记得将social和你希望添加的社交地址前面的#去掉 为文章添加阴影边框打开\themes\next\source\css\_custom\custom.styl,向里面加入：12345678// 主页文章添加阴影效果 .post &#123; margin-top: 60px; margin-bottom: 60px; padding: 25px; -webkit-box-shadow: 0 0 5px rgba(202, 203, 203, .5); -moz-box-shadow: 0 0 5px rgba(202, 203, 204, .5); &#125; 在网站底部添加访问量打开\themes\next\layout\_partials\footer.swig文件,在copyright前添加async src123456```&lt;div class=&quot;powered-by&quot;&gt;&lt;i class=&quot;fa fa-user-md&quot;&gt;&lt;/i&gt;&lt;span id=&quot;busuanzi_container_site_uv&quot;&gt; 本站访客数:&lt;span id=&quot;busuanzi_value_site_uv&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt; 如下图所示： 为文章实现统计功能在根目录下安装 hexo-wordcount,运行： 1$ npm install hexo-wordcount --save 打开主题配置文件themes\next\_config.yml，配置如下： 123456# Post wordcount display settings# Dependencies: https://github.com/willin/hexo-wordcountpost_wordcount: item_text: true wordcount: true min2read: true 这时我们发现文章的【字数统计】和【阅读时长】后面没有对应的xxx字，xx分钟等单位，所以接下来打开themes\next\layout\_macro\post.swig文件在对应为位置添加如下字样： 刷新之后出现乱码将文件保存为UTF-8即可解决 首页文章设置为只显示预览打开主题配置文件themes\next\_config.yml搜索”auto_excerpt”,找到如下部分：12345# Automatically Excerpt. Not recommand.# Please use &lt;!-- more --&gt; in the post to control excerpt accurately.auto_excerpt: enable: false length: 150 把enable改为对应的false改为true即可 在文章底部添加jiathis分享打开主题配置文件themes\next\_config.yml中，设置jiathis: true，即打开了jiathis分享，如下图所示： 想自定义话，打开themes\next\layout\_partials\share\jiathis.swig修改每一个部分就可以了 class123456789&lt;span class=&quot;jiathis_txt&quot;&gt;分享到：&lt;/span&gt; &lt;a class=&quot;jiathis_button_fav&quot;&gt;收藏夹&lt;/a&gt; &lt;a class=&quot;jiathis_button_copy&quot;&gt;复制网址&lt;/a&gt; &lt;a class=&quot;jiathis_button_email&quot;&gt;邮件&lt;/a&gt; &lt;a class=&quot;jiathis_button_weixin&quot;&gt;微信&lt;/a&gt; &lt;a class=&quot;jiathis_button_cqq&quot;&gt;QQ&lt;/a&gt; &lt;a class=&quot;jiathis_button_tsina&quot;&gt;新浪微博&lt;/a&gt; &lt;a class=&quot;jiathis_button_douban&quot;&gt;豆瓣&lt;/a&gt; &lt;a class=&quot;jiathis_button_share&quot;&gt;一键分享&lt;/a&gt; 修改文章底部标签的“#”打开\themes\next\layout\_macro\post.swig 搜索 rel=&quot;tag&quot;&gt;# 将 # 换成&lt;i class=&quot;fa fa-tag&quot;&gt;&lt;/i&gt;即可]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Python中的常用模块]]></title>
    <url>%2F2018%2F03%2F14%2FPython%E4%B8%AD%E7%9A%84%E5%B8%B8%E7%94%A8%E6%A8%A1%E5%9D%97%2F</url>
    <content type="text"></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[文档坐标和视口坐标]]></title>
    <url>%2F2018%2F03%2F14%2F%E6%96%87%E6%A1%A3%E5%9D%90%E6%A0%87%E5%92%8C%E8%A7%86%E5%8F%A3%E5%9D%90%E6%A0%87%2F</url>
    <content type="text"><![CDATA[文档坐标和视口坐标视口坐标是相对于窗口的坐标，而文档坐标是相对于整个文档而言。例如，在文档坐标中如果一个元素的相对于文档的Y坐标是200px，并且用户已经把浏览器向下滚动了75px，那么视口坐标中元素的Y坐标为200px– 75px = 125px。]]></content>
      <tags>
        <tag>html</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2018%2F01%2F23%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
